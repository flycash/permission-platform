// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: permission/v1/permission.proto

package permissionv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 权限定义（资源 + 操作）
type Permission struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BizId         int64                  `protobuf:"varint,2,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	ResourceId    int64                  `protobuf:"varint,5,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	ResourceType  string                 `protobuf:"bytes,6,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"` // 资源类型
	ResourceKey   string                 `protobuf:"bytes,7,opt,name=resource_key,json=resourceKey,proto3" json:"resource_key,omitempty"`    // 资源标识符，类似于 /xxx/xxx/xxx 的格式
	Actions       []string               `protobuf:"bytes,8,rep,name=actions,proto3" json:"actions,omitempty"`                               // 允许的操作列表
	Metadata      string                 `protobuf:"bytes,9,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Permission) Reset() {
	*x = Permission{}
	mi := &file_permission_v1_permission_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Permission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permission) ProtoMessage() {}

func (x *Permission) ProtoReflect() protoreflect.Message {
	mi := &file_permission_v1_permission_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permission.ProtoReflect.Descriptor instead.
func (*Permission) Descriptor() ([]byte, []int) {
	return file_permission_v1_permission_proto_rawDescGZIP(), []int{0}
}

func (x *Permission) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Permission) GetBizId() int64 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *Permission) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Permission) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Permission) GetResourceId() int64 {
	if x != nil {
		return x.ResourceId
	}
	return 0
}

func (x *Permission) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *Permission) GetResourceKey() string {
	if x != nil {
		return x.ResourceKey
	}
	return ""
}

func (x *Permission) GetActions() []string {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *Permission) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

// 权限检查请求
type CheckPermissionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 某人是否具有某个权限。目前来说只需要支持某个人具有某个权限的判定就可以了
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 检查的权限
	Permission            *Permission       `protobuf:"bytes,2,opt,name=permission,proto3" json:"permission,omitempty"`
	SubjectAttributes     map[string]string `protobuf:"bytes,3,rep,name=subject_attributes,json=subjectAttributes,proto3" json:"subject_attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ResourceAttributes    map[string]string `protobuf:"bytes,4,rep,name=resource_attributes,json=resourceAttributes,proto3" json:"resource_attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	EnvironmentAttributes map[string]string `protobuf:"bytes,5,rep,name=environment_attributes,json=environmentAttributes,proto3" json:"environment_attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *CheckPermissionRequest) Reset() {
	*x = CheckPermissionRequest{}
	mi := &file_permission_v1_permission_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPermissionRequest) ProtoMessage() {}

func (x *CheckPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_permission_v1_permission_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPermissionRequest.ProtoReflect.Descriptor instead.
func (*CheckPermissionRequest) Descriptor() ([]byte, []int) {
	return file_permission_v1_permission_proto_rawDescGZIP(), []int{1}
}

func (x *CheckPermissionRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CheckPermissionRequest) GetPermission() *Permission {
	if x != nil {
		return x.Permission
	}
	return nil
}

func (x *CheckPermissionRequest) GetSubjectAttributes() map[string]string {
	if x != nil {
		return x.SubjectAttributes
	}
	return nil
}

func (x *CheckPermissionRequest) GetResourceAttributes() map[string]string {
	if x != nil {
		return x.ResourceAttributes
	}
	return nil
}

func (x *CheckPermissionRequest) GetEnvironmentAttributes() map[string]string {
	if x != nil {
		return x.EnvironmentAttributes
	}
	return nil
}

type BatchCheckPermissionRequest struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Requests      []*CheckPermissionRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchCheckPermissionRequest) Reset() {
	*x = BatchCheckPermissionRequest{}
	mi := &file_permission_v1_permission_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCheckPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCheckPermissionRequest) ProtoMessage() {}

func (x *BatchCheckPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_permission_v1_permission_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCheckPermissionRequest.ProtoReflect.Descriptor instead.
func (*BatchCheckPermissionRequest) Descriptor() ([]byte, []int) {
	return file_permission_v1_permission_proto_rawDescGZIP(), []int{2}
}

func (x *BatchCheckPermissionRequest) GetRequests() []*CheckPermissionRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type BatchCheckPermissionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Allowed       []bool                 `protobuf:"varint,1,rep,packed,name=allowed,proto3" json:"allowed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchCheckPermissionResponse) Reset() {
	*x = BatchCheckPermissionResponse{}
	mi := &file_permission_v1_permission_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCheckPermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCheckPermissionResponse) ProtoMessage() {}

func (x *BatchCheckPermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_permission_v1_permission_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCheckPermissionResponse.ProtoReflect.Descriptor instead.
func (*BatchCheckPermissionResponse) Descriptor() ([]byte, []int) {
	return file_permission_v1_permission_proto_rawDescGZIP(), []int{3}
}

func (x *BatchCheckPermissionResponse) GetAllowed() []bool {
	if x != nil {
		return x.Allowed
	}
	return nil
}

// 权限检查响应
type CheckPermissionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Allowed       bool                   `protobuf:"varint,1,opt,name=allowed,proto3" json:"allowed,omitempty"` // 是否允许操作
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckPermissionResponse) Reset() {
	*x = CheckPermissionResponse{}
	mi := &file_permission_v1_permission_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckPermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPermissionResponse) ProtoMessage() {}

func (x *CheckPermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_permission_v1_permission_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPermissionResponse.ProtoReflect.Descriptor instead.
func (*CheckPermissionResponse) Descriptor() ([]byte, []int) {
	return file_permission_v1_permission_proto_rawDescGZIP(), []int{4}
}

func (x *CheckPermissionResponse) GetAllowed() bool {
	if x != nil {
		return x.Allowed
	}
	return false
}

type Resource struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Id          int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BizId       int64                  `protobuf:"varint,2,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	Type        string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Key         string                 `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Name        string                 `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	// 和 Resource 有关的内容，是业务方在创建 Resource 的时候传入的内容
	// 原封不动的返回
	Metadata      string `protobuf:"bytes,7,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Resource) Reset() {
	*x = Resource{}
	mi := &file_permission_v1_permission_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_permission_v1_permission_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_permission_v1_permission_proto_rawDescGZIP(), []int{5}
}

func (x *Resource) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Resource) GetBizId() int64 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *Resource) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Resource) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Resource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Resource) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Resource) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

var File_permission_v1_permission_proto protoreflect.FileDescriptor

const file_permission_v1_permission_proto_rawDesc = "" +
	"\n" +
	"\x1epermission/v1/permission.proto\x12\rpermission.v1\"\x88\x02\n" +
	"\n" +
	"Permission\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x15\n" +
	"\x06biz_id\x18\x02 \x01(\x03R\x05bizId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x1f\n" +
	"\vresource_id\x18\x05 \x01(\x03R\n" +
	"resourceId\x12#\n" +
	"\rresource_type\x18\x06 \x01(\tR\fresourceType\x12!\n" +
	"\fresource_key\x18\a \x01(\tR\vresourceKey\x12\x18\n" +
	"\aactions\x18\b \x03(\tR\aactions\x12\x1a\n" +
	"\bmetadata\x18\t \x01(\tR\bmetadata\"\x92\x05\n" +
	"\x16CheckPermissionRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\x03R\x03uid\x129\n" +
	"\n" +
	"permission\x18\x02 \x01(\v2\x19.permission.v1.PermissionR\n" +
	"permission\x12k\n" +
	"\x12subject_attributes\x18\x03 \x03(\v2<.permission.v1.CheckPermissionRequest.SubjectAttributesEntryR\x11subjectAttributes\x12n\n" +
	"\x13resource_attributes\x18\x04 \x03(\v2=.permission.v1.CheckPermissionRequest.ResourceAttributesEntryR\x12resourceAttributes\x12w\n" +
	"\x16environment_attributes\x18\x05 \x03(\v2@.permission.v1.CheckPermissionRequest.EnvironmentAttributesEntryR\x15environmentAttributes\x1aD\n" +
	"\x16SubjectAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aE\n" +
	"\x17ResourceAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aH\n" +
	"\x1aEnvironmentAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"`\n" +
	"\x1bBatchCheckPermissionRequest\x12A\n" +
	"\brequests\x18\x01 \x03(\v2%.permission.v1.CheckPermissionRequestR\brequests\"8\n" +
	"\x1cBatchCheckPermissionResponse\x12\x18\n" +
	"\aallowed\x18\x01 \x03(\bR\aallowed\"3\n" +
	"\x17CheckPermissionResponse\x12\x18\n" +
	"\aallowed\x18\x01 \x01(\bR\aallowed\"\xa9\x01\n" +
	"\bResource\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x15\n" +
	"\x06biz_id\x18\x02 \x01(\x03R\x05bizId\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x10\n" +
	"\x03key\x18\x04 \x01(\tR\x03key\x12\x12\n" +
	"\x04name\x18\x05 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\x12\x1a\n" +
	"\bmetadata\x18\a \x01(\tR\bmetadata2u\n" +
	"\x11PermissionService\x12`\n" +
	"\x0fCheckPermission\x12%.permission.v1.CheckPermissionRequest\x1a&.permission.v1.CheckPermissionResponse2\x89\x01\n" +
	"\x16BatchPermissionService\x12o\n" +
	"\x14BatchCheckPermission\x12*.permission.v1.BatchCheckPermissionRequest\x1a+.permission.v1.BatchCheckPermissionResponseB\xc9\x01\n" +
	"\x11com.permission.v1B\x0fPermissionProtoP\x01ZNgitee.com/flycash/permission-platform/api/proto/gen/permission/v1;permissionv1\xa2\x02\x03PXX\xaa\x02\rPermission.V1\xca\x02\rPermission\\V1\xe2\x02\x19Permission\\V1\\GPBMetadata\xea\x02\x0ePermission::V1b\x06proto3"

var (
	file_permission_v1_permission_proto_rawDescOnce sync.Once
	file_permission_v1_permission_proto_rawDescData []byte
)

func file_permission_v1_permission_proto_rawDescGZIP() []byte {
	file_permission_v1_permission_proto_rawDescOnce.Do(func() {
		file_permission_v1_permission_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_permission_v1_permission_proto_rawDesc), len(file_permission_v1_permission_proto_rawDesc)))
	})
	return file_permission_v1_permission_proto_rawDescData
}

var file_permission_v1_permission_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_permission_v1_permission_proto_goTypes = []any{
	(*Permission)(nil),                   // 0: permission.v1.Permission
	(*CheckPermissionRequest)(nil),       // 1: permission.v1.CheckPermissionRequest
	(*BatchCheckPermissionRequest)(nil),  // 2: permission.v1.BatchCheckPermissionRequest
	(*BatchCheckPermissionResponse)(nil), // 3: permission.v1.BatchCheckPermissionResponse
	(*CheckPermissionResponse)(nil),      // 4: permission.v1.CheckPermissionResponse
	(*Resource)(nil),                     // 5: permission.v1.Resource
	nil,                                  // 6: permission.v1.CheckPermissionRequest.SubjectAttributesEntry
	nil,                                  // 7: permission.v1.CheckPermissionRequest.ResourceAttributesEntry
	nil,                                  // 8: permission.v1.CheckPermissionRequest.EnvironmentAttributesEntry
}
var file_permission_v1_permission_proto_depIdxs = []int32{
	0, // 0: permission.v1.CheckPermissionRequest.permission:type_name -> permission.v1.Permission
	6, // 1: permission.v1.CheckPermissionRequest.subject_attributes:type_name -> permission.v1.CheckPermissionRequest.SubjectAttributesEntry
	7, // 2: permission.v1.CheckPermissionRequest.resource_attributes:type_name -> permission.v1.CheckPermissionRequest.ResourceAttributesEntry
	8, // 3: permission.v1.CheckPermissionRequest.environment_attributes:type_name -> permission.v1.CheckPermissionRequest.EnvironmentAttributesEntry
	1, // 4: permission.v1.BatchCheckPermissionRequest.requests:type_name -> permission.v1.CheckPermissionRequest
	1, // 5: permission.v1.PermissionService.CheckPermission:input_type -> permission.v1.CheckPermissionRequest
	2, // 6: permission.v1.BatchPermissionService.BatchCheckPermission:input_type -> permission.v1.BatchCheckPermissionRequest
	4, // 7: permission.v1.PermissionService.CheckPermission:output_type -> permission.v1.CheckPermissionResponse
	3, // 8: permission.v1.BatchPermissionService.BatchCheckPermission:output_type -> permission.v1.BatchCheckPermissionResponse
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_permission_v1_permission_proto_init() }
func file_permission_v1_permission_proto_init() {
	if File_permission_v1_permission_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_permission_v1_permission_proto_rawDesc), len(file_permission_v1_permission_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_permission_v1_permission_proto_goTypes,
		DependencyIndexes: file_permission_v1_permission_proto_depIdxs,
		MessageInfos:      file_permission_v1_permission_proto_msgTypes,
	}.Build()
	File_permission_v1_permission_proto = out.File
	file_permission_v1_permission_proto_goTypes = nil
	file_permission_v1_permission_proto_depIdxs = nil
}
