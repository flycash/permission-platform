// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: permission/v1/permission.proto

package permissionv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 操作类型枚举（可根据业务需求扩展）
type ActionType int32

const (
	ActionType_ACTION_UNSPECIFIED ActionType = 0
	ActionType_READ               ActionType = 1
	ActionType_WRITE              ActionType = 2
)

// Enum value maps for ActionType.
var (
	ActionType_name = map[int32]string{
		0: "ACTION_UNSPECIFIED",
		1: "READ",
		2: "WRITE",
	}
	ActionType_value = map[string]int32{
		"ACTION_UNSPECIFIED": 0,
		"READ":               1,
		"WRITE":              2,
	}
)

func (x ActionType) Enum() *ActionType {
	p := new(ActionType)
	*p = x
	return p
}

func (x ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_permission_v1_permission_proto_enumTypes[0].Descriptor()
}

func (ActionType) Type() protoreflect.EnumType {
	return &file_permission_v1_permission_proto_enumTypes[0]
}

func (x ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionType.Descriptor instead.
func (ActionType) EnumDescriptor() ([]byte, []int) {
	return file_permission_v1_permission_proto_rawDescGZIP(), []int{0}
}

// 权限定义（资源 + 操作）
type Permission struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ResourceKey   string                 `protobuf:"bytes,1,opt,name=resource_key,json=resourceKey,proto3" json:"resource_key,omitempty"`            // 资源标识符，类似于 /xxx/xxx/xxx 的格式
	Actions       []ActionType           `protobuf:"varint,2,rep,packed,name=actions,proto3,enum=permission.v1.ActionType" json:"actions,omitempty"` // 允许的操作列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Permission) Reset() {
	*x = Permission{}
	mi := &file_permission_v1_permission_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Permission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permission) ProtoMessage() {}

func (x *Permission) ProtoReflect() protoreflect.Message {
	mi := &file_permission_v1_permission_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permission.ProtoReflect.Descriptor instead.
func (*Permission) Descriptor() ([]byte, []int) {
	return file_permission_v1_permission_proto_rawDescGZIP(), []int{0}
}

func (x *Permission) GetResourceKey() string {
	if x != nil {
		return x.ResourceKey
	}
	return ""
}

func (x *Permission) GetActions() []ActionType {
	if x != nil {
		return x.Actions
	}
	return nil
}

// 权限检查请求
type CheckPermissionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 某人是否具有某个权限。目前来说只需要支持某个人具有某个权限的判定就可以了
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 检查的权限
	Permission    *Permission `protobuf:"bytes,2,opt,name=permission,proto3" json:"permission,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckPermissionRequest) Reset() {
	*x = CheckPermissionRequest{}
	mi := &file_permission_v1_permission_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPermissionRequest) ProtoMessage() {}

func (x *CheckPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_permission_v1_permission_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPermissionRequest.ProtoReflect.Descriptor instead.
func (*CheckPermissionRequest) Descriptor() ([]byte, []int) {
	return file_permission_v1_permission_proto_rawDescGZIP(), []int{1}
}

func (x *CheckPermissionRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CheckPermissionRequest) GetPermission() *Permission {
	if x != nil {
		return x.Permission
	}
	return nil
}

// 权限检查响应
type CheckPermissionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Allowed       bool                   `protobuf:"varint,1,opt,name=allowed,proto3" json:"allowed,omitempty"` // 是否允许操作
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckPermissionResponse) Reset() {
	*x = CheckPermissionResponse{}
	mi := &file_permission_v1_permission_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckPermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPermissionResponse) ProtoMessage() {}

func (x *CheckPermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_permission_v1_permission_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPermissionResponse.ProtoReflect.Descriptor instead.
func (*CheckPermissionResponse) Descriptor() ([]byte, []int) {
	return file_permission_v1_permission_proto_rawDescGZIP(), []int{2}
}

func (x *CheckPermissionResponse) GetAllowed() bool {
	if x != nil {
		return x.Allowed
	}
	return false
}

var File_permission_v1_permission_proto protoreflect.FileDescriptor

const file_permission_v1_permission_proto_rawDesc = "" +
	"\n" +
	"\x1epermission/v1/permission.proto\x12\rpermission.v1\"d\n" +
	"\n" +
	"Permission\x12!\n" +
	"\fresource_key\x18\x01 \x01(\tR\vresourceKey\x123\n" +
	"\aactions\x18\x02 \x03(\x0e2\x19.permission.v1.ActionTypeR\aactions\"e\n" +
	"\x16CheckPermissionRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\x03R\x03uid\x129\n" +
	"\n" +
	"permission\x18\x02 \x01(\v2\x19.permission.v1.PermissionR\n" +
	"permission\"3\n" +
	"\x17CheckPermissionResponse\x12\x18\n" +
	"\aallowed\x18\x01 \x01(\bR\aallowed*9\n" +
	"\n" +
	"ActionType\x12\x16\n" +
	"\x12ACTION_UNSPECIFIED\x10\x00\x12\b\n" +
	"\x04READ\x10\x01\x12\t\n" +
	"\x05WRITE\x10\x022u\n" +
	"\x11PermissionService\x12`\n" +
	"\x0fCheckPermission\x12%.permission.v1.CheckPermissionRequest\x1a&.permission.v1.CheckPermissionResponseB\xc9\x01\n" +
	"\x11com.permission.v1B\x0fPermissionProtoP\x01ZNgitee.com/flycash/permission-platform/api/proto/gen/permission/v1;permissionv1\xa2\x02\x03PXX\xaa\x02\rPermission.V1\xca\x02\rPermission\\V1\xe2\x02\x19Permission\\V1\\GPBMetadata\xea\x02\x0ePermission::V1b\x06proto3"

var (
	file_permission_v1_permission_proto_rawDescOnce sync.Once
	file_permission_v1_permission_proto_rawDescData []byte
)

func file_permission_v1_permission_proto_rawDescGZIP() []byte {
	file_permission_v1_permission_proto_rawDescOnce.Do(func() {
		file_permission_v1_permission_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_permission_v1_permission_proto_rawDesc), len(file_permission_v1_permission_proto_rawDesc)))
	})
	return file_permission_v1_permission_proto_rawDescData
}

var file_permission_v1_permission_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_permission_v1_permission_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_permission_v1_permission_proto_goTypes = []any{
	(ActionType)(0),                 // 0: permission.v1.ActionType
	(*Permission)(nil),              // 1: permission.v1.Permission
	(*CheckPermissionRequest)(nil),  // 2: permission.v1.CheckPermissionRequest
	(*CheckPermissionResponse)(nil), // 3: permission.v1.CheckPermissionResponse
}
var file_permission_v1_permission_proto_depIdxs = []int32{
	0, // 0: permission.v1.Permission.actions:type_name -> permission.v1.ActionType
	1, // 1: permission.v1.CheckPermissionRequest.permission:type_name -> permission.v1.Permission
	2, // 2: permission.v1.PermissionService.CheckPermission:input_type -> permission.v1.CheckPermissionRequest
	3, // 3: permission.v1.PermissionService.CheckPermission:output_type -> permission.v1.CheckPermissionResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_permission_v1_permission_proto_init() }
func file_permission_v1_permission_proto_init() {
	if File_permission_v1_permission_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_permission_v1_permission_proto_rawDesc), len(file_permission_v1_permission_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_permission_v1_permission_proto_goTypes,
		DependencyIndexes: file_permission_v1_permission_proto_depIdxs,
		EnumInfos:         file_permission_v1_permission_proto_enumTypes,
		MessageInfos:      file_permission_v1_permission_proto_msgTypes,
	}.Build()
	File_permission_v1_permission_proto = out.File
	file_permission_v1_permission_proto_goTypes = nil
	file_permission_v1_permission_proto_depIdxs = nil
}
