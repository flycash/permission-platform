mysql:
  dsn: "root:root@tcp(localhost:13316)/permission?charset=utf8mb4&collation=utf8mb4_general_ci&parseTime=True&loc=Local&timeout=1s&readTimeout=3s&writeTimeout=3s&multiStatements=true"

redis:
  addr: "localhost:6379"
cache:
  local:
    capacity: 100000
  multilevel:
    etcdKey: "xxx"
    capacity: 1000000
    localCacheRefreshPeriod: 1000000
    redisPingTimeout: 1000000
    redisHealthCheckPeriod: 1000000
    errorEvents:
      bitRingSize: 1024
      rateThreshold: 0.3
      consecutiveCount: 10



etcd:
  addrs:
    - "127.0.0.1:2379"
  connectTimeout: "1s"
  secure: false

server:
  governor:
    host: 0.0.0.0
    port: 9003
  grpc:
    rbac:
      host: "0.0.0.0"
      port: 9002

trace:
  zipkin:
    endpoint: "http://localhost:9411/api/v2/spans"
    serviceName: "notification-platform"


jwt:
  key: "permission_platform_key"
  issuer: "permission-platform"
cron:
  quotaMonthlyReset:
    spec: "0 0 1 1 *"
  loadBusinessLocalCache:
    # 调小的问题是：会不会对数据库造成压力?
    # 你产生的读 QPS  = N(节点数量) * 频率（比如说 1秒钟一次）
    spec: "* * * * *" # 每分钟执行一次，你可以调小，甚至于到 1 秒钟一次

canal:
  host: "canal-server"
  prot: 11111
  username: "canal"
  password: "canal_pass"
  destination: "permission"
  schema: "permission"
  table: "user_roles"
  # 5 秒
  idleTimeout: 5000000000
  batchSize: &canal_batch_size 1000

kafka:
  addr: "localhost:9092"

userRoleBinlogEvent:
  topic: "user_roles_binlog"
  consumer:
    groupId: "user_roles_binlog_consumer_group"

cache:
  local:
    capacity: 1000000
  multilevel:
    etcdKey: "hot_users"
    localCacheRefreshPeriod: 5000000000
    redisPingTimeout: 3000000000
    redisHealthCheckPeriod: 1000000000
    errorEvents:
      bitRingSize: 128
      rateThreshold: 0.8
      consecutiveCount: 3