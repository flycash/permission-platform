// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package abac

import (
	"gitee.com/flycash/permission-platform/internal/repository"
	"gitee.com/flycash/permission-platform/internal/repository/dao"
	"gitee.com/flycash/permission-platform/internal/service/abac"
	"gitee.com/flycash/permission-platform/internal/service/abac/evaluator"
	"github.com/ego-component/egorm"
)

// Injectors from wire.go:

func Init(db *egorm.Component) *Service {
	permissionDAO := dao.NewPermissionDAO(db)
	permissionRepository := repository.NewPermissionRepository(permissionDAO)
	resourceDAO := dao.NewResourceDAO(db)
	resourceRepository := repository.NewResourceRepository(resourceDAO)
	policyDAO := dao.NewPolicyDAO(db)
	policyRepo := repository.NewPolicyRepository(policyDAO)
	environmentAttributeDAO := dao.NewEnvironmentAttributeDAO(db)
	resourceAttributeValueDAO := dao.NewResourceAttributeValueDAO(db)
	subjectAttributeValueDAO := dao.NewSubjectAttributeValueDAO(db)
	attributeDefinitionDAO := dao.NewAttributeDefinitionDAO(db)
	attributeValueRepository := repository.NewAttributeValueRepository(environmentAttributeDAO, resourceAttributeValueDAO, subjectAttributeValueDAO, attributeDefinitionDAO)
	attributeDefinitionRepository := repository.NewAttributeDefinitionRepository(attributeDefinitionDAO)
	selector := evaluator.NewSelector()
	policyExecutor := abac.NewRuleParser(selector)
	permissionSvc := abac.NewPermissionSvc(permissionRepository, resourceRepository, policyRepo, attributeValueRepository, attributeDefinitionRepository, policyExecutor)
	service := &Service{
		PermissionSvc:  permissionSvc,
		ValRepo:        attributeValueRepository,
		DefinitionRepo: attributeDefinitionRepository,
		PermissionRepo: permissionRepository,
		ResourceRepo:   resourceRepository,
		PolicyRepo:     policyRepo,
	}
	return service
}

// wire.go:

type Service struct {
	PermissionSvc  abac.PermissionSvc
	ValRepo        repository.AttributeValueRepository
	DefinitionRepo repository.AttributeDefinitionRepository
	PermissionRepo repository.PermissionRepository
	ResourceRepo   repository.ResourceRepository
	PolicyRepo     repository.PolicyRepo
}
