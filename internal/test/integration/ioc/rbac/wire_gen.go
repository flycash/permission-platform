// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package rbac

import (
	"gitee.com/flycash/permission-platform/internal/repository"
	"gitee.com/flycash/permission-platform/internal/repository/dao"
	"gitee.com/flycash/permission-platform/internal/service/rbac"
	"gitee.com/flycash/permission-platform/internal/test/ioc"
)

// Injectors from wire.go:

func Init() *Service {
	db := ioc.InitDBAndTables()
	resourceDAO := dao.NewResourceDAO(db)
	permissionDAO := dao.NewPermissionDAO(db)
	roleDAO := dao.NewRoleDAO(db)
	rolePermissionDAO := dao.NewRolePermissionDAO(db)
	roleInclusionDAO := dao.NewRoleInclusionDAO(db)
	userPermissionDAO := dao.NewUserPermissionDAO(db)
	userRoleDAO := dao.NewUserRoleDAO(db)
	businessConfigDAO := dao.NewBusinessConfigDAO(db)
	rbacRepository := repository.NewRBACRepository(resourceDAO, permissionDAO, roleDAO, rolePermissionDAO, roleInclusionDAO, userPermissionDAO, userRoleDAO, businessConfigDAO)
	service := rbac.NewService(rbacRepository)
	rbacService := &Service{
		Svc:  service,
		Repo: rbacRepository,
	}
	return rbacService
}

// wire.go:

type Service struct {
	Svc  rbac.Service
	Repo repository.RBACRepository
}
