// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package ioc

import (
	rbac2 "gitee.com/flycash/permission-platform/internal/api/grpc/rbac"
	"gitee.com/flycash/permission-platform/internal/ioc"
	"gitee.com/flycash/permission-platform/internal/repository"
	"gitee.com/flycash/permission-platform/internal/repository/dao"
	"gitee.com/flycash/permission-platform/internal/service/rbac"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitApp() *ioc.App {
	db := ioc.InitDB()
	businessConfigDAO := dao.NewBusinessConfigDAO(db)
	businessConfigRepository := repository.NewBusinessConfigRepository(businessConfigDAO)
	resourceDAO := dao.NewResourceDAO(db)
	resourceRepository := repository.NewResourceRepository(resourceDAO)
	permissionDAO := dao.NewPermissionDAO(db)
	permissionRepository := repository.NewPermissionRepository(permissionDAO)
	roleDAO := dao.NewRoleDAO(db)
	roleRepository := repository.NewRoleRepository(roleDAO)
	roleInclusionDAO := dao.NewRoleInclusionDAO(db)
	roleInclusionRepository := repository.NewRoleInclusionRepository(roleInclusionDAO)
	rolePermissionDAO := dao.NewRolePermissionDAO(db)
	rolePermissionRepository := repository.NewRolePermissionRepository(rolePermissionDAO)
	userRoleDAO := dao.NewUserRoleDAO(db)
	userRoleRepository := repository.NewUserRoleRepository(userRoleDAO)
	userPermissionDAO := dao.NewUserPermissionDAO(db)
	userPermissionRepository := repository.NewUserPermissionRepository(userPermissionDAO)
	rbacRepository := repository.NewRBACRepository(businessConfigRepository, resourceRepository, permissionRepository, roleRepository, roleInclusionRepository, rolePermissionRepository, userRoleRepository, userPermissionRepository)
	token := ioc.InitJWTToken()
	service := rbac.NewService(rbacRepository, token)
	server := rbac2.NewServer(service)
	permissionService := rbac.NewPermissionService(rbacRepository)
	permissionServiceServer := rbac2.NewPermissionServiceServer(permissionService)
	v := ioc.InitGRPC(server, permissionServiceServer, token)
	app := &ioc.App{
		GrpcServers: v,
	}
	return app
}

// wire.go:

var (
	baseSet    = wire.NewSet(ioc.InitDB, ioc.InitDistributedLock, ioc.InitEtcdClient, ioc.InitIDGenerator, ioc.InitRedisClient, ioc.InitGoCache, ioc.InitRedisCmd, ioc.InitJWTToken)
	rbacSvcSet = wire.NewSet(rbac.NewService, rbac.NewPermissionService, repository.NewRBACRepository, dao.NewBusinessConfigDAO, repository.NewBusinessConfigRepository, dao.NewResourceDAO, repository.NewResourceRepository, dao.NewPermissionDAO, repository.NewPermissionRepository, dao.NewRoleDAO, repository.NewRoleRepository, dao.NewRoleInclusionDAO, repository.NewRoleInclusionRepository, dao.NewRolePermissionDAO, repository.NewRolePermissionRepository, dao.NewUserRoleDAO, repository.NewUserRoleRepository, dao.NewUserPermissionDAO, repository.NewUserPermissionRepository)
)
